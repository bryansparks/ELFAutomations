{
  "name": "Gmail to Slack Triage",
  "nodes": [
    {
      "id": "gmail_trigger",
      "name": "Gmail New Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [250, 300],
      "parameters": {
        "operation": "getAll",
        "filters": {
          "labelIds": ["INBOX", "UNREAD"],
          "receivedAfter": "={{$now.minus(5, 'minutes').toISO()}}"
        },
        "options": {
          "format": "resolved",
          "attachmentsPrefix": "attachment_"
        }
      }
    },
    {
      "id": "ai_categorize",
      "name": "AI Email Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [450, 300],
      "parameters": {
        "operation": "message",
        "modelId": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "Analyze emails and return JSON with: urgency (high/medium/low), category (sales/support/marketing/other), summary (one sentence), suggested_action (respond/delegate/archive), and team (sales/support/marketing)."
            },
            {
              "role": "user",
              "content": "From: {{$json.from}}\nSubject: {{$json.subject}}\nBody: {{$json.text}}"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "responseFormat": { "type": "json_object" }
        }
      }
    },
    {
      "id": "parse_ai",
      "name": "Parse AI Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [650, 300],
      "parameters": {
        "jsCode": "const items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const email = item.json;\n  const aiResponse = JSON.parse($node['AI Email Analysis'].json.message.content);\n  \n  results.push({\n    json: {\n      ...email,\n      ...aiResponse,\n      emailId: email.id,\n      fromEmail: email.from,\n      receivedAt: email.date,\n      hasAttachments: email.attachments && email.attachments.length > 0\n    }\n  });\n}\n\nreturn results;"
      }
    },
    {
      "id": "store_supabase",
      "name": "Store in Supabase",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [850, 300],
      "parameters": {
        "operation": "insert",
        "table": "email_triage",
        "columns": "email_id,from_email,subject,urgency,category,team,summary,suggested_action,received_at",
        "options": {}
      }
    },
    {
      "id": "route_urgency",
      "name": "Route by Urgency",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1050, 300],
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.urgency}}",
        "rules": {
          "rules": [
            { "value2": "high", "output": 0 },
            { "value2": "medium", "output": 1 },
            { "value2": "low", "output": 2 }
          ]
        }
      }
    },
    {
      "id": "slack_urgent",
      "name": "Slack Urgent Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1250, 200],
      "parameters": {
        "operation": "post",
        "channel": "#urgent-emails",
        "text": "ðŸš¨ Urgent Email Received",
        "otherOptions": {
          "attachments": [{
            "color": "#ff0000",
            "title": "{{$json.subject}}",
            "fields": [
              { "title": "From", "value": "{{$json.fromEmail}}", "short": true },
              { "title": "Category", "value": "{{$json.category}}", "short": true },
              { "title": "Summary", "value": "{{$json.summary}}", "short": false },
              { "title": "Action", "value": "{{$json.suggested_action}}", "short": true }
            ]
          }]
        }
      }
    },
    {
      "id": "slack_normal",
      "name": "Slack Team Channel",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1250, 300],
      "parameters": {
        "operation": "post",
        "channel": "#{{$json.team}}-emails",
        "text": "ðŸ“§ New Email for {{$json.team}} team",
        "otherOptions": {
          "attachments": [{
            "color": "#36a64f",
            "title": "{{$json.subject}}",
            "fields": [
              { "title": "From", "value": "{{$json.fromEmail}}", "short": true },
              { "title": "Priority", "value": "{{$json.urgency}}", "short": true },
              { "title": "Summary", "value": "{{$json.summary}}", "short": false }
            ]
          }]
        }
      }
    },
    {
      "id": "archive_low",
      "name": "Auto Archive Low Priority",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [1250, 400],
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{$json.emailId}}",
        "labelIds": ["ARCHIVED", "LOW_PRIORITY"]
      }
    }
  ],
  "connections": {
    "Gmail New Email": {
      "main": [[{ "node": "AI Email Analysis", "type": "main", "index": 0 }]]
    },
    "AI Email Analysis": {
      "main": [[{ "node": "Parse AI Response", "type": "main", "index": 0 }]]
    },
    "Parse AI Response": {
      "main": [[{ "node": "Store in Supabase", "type": "main", "index": 0 }]]
    },
    "Store in Supabase": {
      "main": [[{ "node": "Route by Urgency", "type": "main", "index": 0 }]]
    },
    "Route by Urgency": {
      "main": [
        [{ "node": "Slack Urgent Alert", "type": "main", "index": 0 }],
        [{ "node": "Slack Team Channel", "type": "main", "index": 0 }],
        [{ "node": "Auto Archive Low Priority", "type": "main", "index": 0 }]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true,
    "executionTimeout": 300,
    "errorWorkflow": "error-handler"
  },
  "tags": ["email", "gmail", "slack", "ai", "pattern:email_management"]
}
