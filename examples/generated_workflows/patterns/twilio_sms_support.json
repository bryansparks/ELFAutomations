{
  "name": "Twilio SMS Support Hub",
  "nodes": [
    {
      "id": "webhook_trigger",
      "name": "Twilio SMS Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "parameters": {
        "httpMethod": "POST",
        "path": "twilio-sms",
        "responseMode": "responseNode",
        "options": {
          "rawBody": false
        }
      }
    },
    {
      "id": "extract_sms",
      "name": "Extract SMS Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [450, 300],
      "parameters": {
        "jsCode": "const sms = $input.first().json;\n\nreturn {\n  json: {\n    messageId: sms.MessageSid,\n    from: sms.From,\n    to: sms.To,\n    body: sms.Body,\n    fromCity: sms.FromCity,\n    fromState: sms.FromState,\n    fromCountry: sms.FromCountry,\n    receivedAt: new Date().toISOString()\n  }\n};"
      }
    },
    {
      "id": "check_customer",
      "name": "Check Customer History",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [650, 300],
      "parameters": {
        "operation": "getAll",
        "table": "customers",
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "field": "phone",
              "type": "string",
              "operation": "equals",
              "value": "={{$json.from}}"
            }
          ]
        },
        "limit": 1
      }
    },
    {
      "id": "ai_analyze",
      "name": "AI Sentiment Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [850, 300],
      "parameters": {
        "operation": "message",
        "modelId": "gpt-3.5-turbo",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "Analyze SMS messages for sentiment and intent. Return JSON with: sentiment (positive/neutral/negative), intent (support/sales/complaint/other), urgency (high/medium/low), suggested_response, and requires_human (boolean)."
            },
            {
              "role": "user",
              "content": "SMS from {{$json.from}}: {{$json.body}}"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "responseFormat": { "type": "json_object" }
        }
      }
    },
    {
      "id": "merge_data",
      "name": "Merge Analysis",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1050, 300],
      "parameters": {
        "jsCode": "const sms = $input.all()[0].json;\nconst customer = $node['Check Customer History'].json;\nconst analysis = JSON.parse($node['AI Sentiment Analysis'].json.message.content);\n\nreturn {\n  json: {\n    ...sms,\n    customerId: customer.id || null,\n    customerName: customer.name || 'Unknown',\n    isVip: customer.vip_status || false,\n    previousTickets: customer.ticket_count || 0,\n    ...analysis\n  }\n};"
      }
    },
    {
      "id": "store_message",
      "name": "Store SMS Message",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1250, 300],
      "parameters": {
        "operation": "insert",
        "table": "sms_messages",
        "columns": "message_id,from_number,to_number,body,sentiment,intent,urgency,customer_id,received_at"
      }
    },
    {
      "id": "route_response",
      "name": "Route by Response Need",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1450, 300],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.requires_human}}",
              "value2": true
            }
          ]
        }
      }
    },
    {
      "id": "auto_respond",
      "name": "Send Auto Response",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [1650, 200],
      "parameters": {
        "operation": "send",
        "from": "={{$json.to}}",
        "to": "={{$json.from}}",
        "message": "={{$json.suggested_response}}\n\nReply HELP for assistance or STOP to unsubscribe."
      }
    },
    {
      "id": "create_ticket",
      "name": "Create Support Ticket",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1650, 400],
      "parameters": {
        "operation": "insert",
        "table": "support_tickets",
        "columns": "customer_id,channel,priority,subject,description,status",
        "columnData": {
          "customer_id": "={{$json.customerId}}",
          "channel": "sms",
          "priority": "={{$json.urgency}}",
          "subject": "SMS from {{$json.from}}",
          "description": "{{$json.body}}\n\nSentiment: {{$json.sentiment}}\nIntent: {{$json.intent}}",
          "status": "open"
        }
      }
    },
    {
      "id": "notify_team",
      "name": "Notify Support Team",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1850, 400],
      "parameters": {
        "operation": "post",
        "channel": "#support-sms",
        "text": "ðŸ†˜ New SMS Support Ticket",
        "otherOptions": {
          "attachments": [{
            "color": "#ff9900",
            "title": "SMS from {{$json.from}}",
            "fields": [
              { "title": "Customer", "value": "{{$json.customerName}}", "short": true },
              { "title": "Sentiment", "value": "{{$json.sentiment}}", "short": true },
              { "title": "Intent", "value": "{{$json.intent}}", "short": true },
              { "title": "Priority", "value": "{{$json.urgency}}", "short": true },
              { "title": "Message", "value": "{{$json.body}}", "short": false }
            ],
            "footer": "VIP: {{$json.isVip}} | Previous Tickets: {{$json.previousTickets}}"
          }]
        }
      }
    },
    {
      "id": "respond_webhook",
      "name": "Respond to Twilio",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2050, 300],
      "parameters": {
        "respondWith": "text",
        "responseBody": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><Response></Response>",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/xml"
              }
            ]
          }
        }
      }
    }
  ],
  "connections": {
    "Twilio SMS Webhook": {
      "main": [[{ "node": "Extract SMS Data", "type": "main", "index": 0 }]]
    },
    "Extract SMS Data": {
      "main": [[{ "node": "Check Customer History", "type": "main", "index": 0 }]]
    },
    "Check Customer History": {
      "main": [[{ "node": "AI Sentiment Analysis", "type": "main", "index": 0 }]]
    },
    "AI Sentiment Analysis": {
      "main": [[{ "node": "Merge Analysis", "type": "main", "index": 0 }]]
    },
    "Merge Analysis": {
      "main": [[{ "node": "Store SMS Message", "type": "main", "index": 0 }]]
    },
    "Store SMS Message": {
      "main": [[{ "node": "Route by Response Need", "type": "main", "index": 0 }]]
    },
    "Route by Response Need": {
      "main": [
        [{ "node": "Auto Respond", "type": "main", "index": 0 }],
        [{ "node": "Create Support Ticket", "type": "main", "index": 0 }]
      ]
    },
    "Auto Respond": {
      "main": [[{ "node": "Respond to Twilio", "type": "main", "index": 0 }]]
    },
    "Create Support Ticket": {
      "main": [[{ "node": "Notify Support Team", "type": "main", "index": 0 }]]
    },
    "Notify Support Team": {
      "main": [[{ "node": "Respond to Twilio", "type": "main", "index": 0 }]]
    }
  },
  "active": false,
  "settings": {
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true,
    "executionTimeout": 30,
    "errorWorkflow": "error-handler"
  },
  "tags": ["sms", "twilio", "support", "ai", "pattern:sms_communication"]
}
