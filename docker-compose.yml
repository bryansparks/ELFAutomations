version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: elf-postgres
    environment:
      POSTGRES_DB: elfautomations
      POSTGRES_USER: elfuser
      POSTGRES_PASSWORD: elfpass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./tools/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elfuser -d elfautomations"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: elf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: elf-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tools/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: elf-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./tools/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./tools/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  # AgentGateway - MCP Infrastructure Foundation
  agentgateway:
    build:
      context: .
      dockerfile: docker/agentgateway.Dockerfile
    container_name: elf-agentgateway
    ports:
      - "3000:3000"
      - "9091:9091"
    volumes:
      - ./config/agentgateway:/app/config

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: elf-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: elf-network
