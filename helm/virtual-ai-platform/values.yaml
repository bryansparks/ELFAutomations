# Default values for virtual-ai-platform
replicaCount: 1

image:
  repository: virtual-ai-platform
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: virtual-ai.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Virtual AI Platform specific configuration
virtualAI:
  # Environment configuration
  environment: development

  # Supabase configuration
  supabase:
    url: ""
    anonKey: ""
    personalAccessToken: ""
    projectId: ""

  # LLM API configuration
  llm:
    anthropic:
      apiKey: ""
    openai:
      apiKey: ""

  # Agent configuration
  agents:
    chief:
      enabled: true
      replicas: 1
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"

    departments:
      sales:
        enabled: true
        replicas: 2
      marketing:
        enabled: true
        replicas: 2
      product:
        enabled: true
        replicas: 1
      customerSuccess:
        enabled: true
        replicas: 2
      backOffice:
        enabled: true
        replicas: 1

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    retention: "30d"
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

  grafana:
    enabled: true
    adminPassword: "admin"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 1Gi
  replica:
    replicaCount: 1

# kagent controller configuration
kagent:
  enabled: true
  controller:
    image:
      repository: kagent/controller
      tag: "latest"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
