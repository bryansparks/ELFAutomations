apiVersion: v1
kind: ConfigMap
metadata:
  name: agentgateway-config
  namespace: virtual-ai-platform
  labels:
    app: agentgateway
    component: config
data:
  config.json: |
    {
      "type": "static",
      "listeners": [
        {
          "name": "mcp-sse",
          "protocol": "MCP",
          "sse": {
            "address": "[::]",
            "port": 3000
          }
        },
        {
          "name": "admin",
          "protocol": "HTTP",
          "http": {
            "address": "[::]",
            "port": 8080
          }
        }
      ],
      "targets": {
        "mcp": [
          {
            "name": "supabase",
            "stdio": {
              "cmd": "npx",
              "args": ["-y", "@supabase/mcp-server-supabase@latest"],
              "env": {
                "SUPABASE_URL": "${SUPABASE_URL}",
                "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}",
                "SUPABASE_PERSONAL_ACCESS_TOKEN": "${SUPABASE_PERSONAL_ACCESS_TOKEN}"
              }
            },
            "health_check": {
              "enabled": true,
              "interval": "30s",
              "timeout": "5s"
            }
          },
          {
            "name": "team-registry",
            "stdio": {
              "cmd": "node",
              "args": ["dist/team-registry/server.js"],
              "env": {
                "SUPABASE_URL": "${SUPABASE_URL}",
                "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}"
              },
              "working_directory": "/mcp-servers-ts"
            },
            "health_check": {
              "enabled": true,
              "interval": "30s",
              "timeout": "5s"
            }
          },
          {
            "name": "business-tools",
            "stdio": {
              "cmd": "python",
              "args": ["-m", "mcp_servers.business_tools"],
              "env": {
                "SUPABASE_URL": "${SUPABASE_URL}",
                "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}"
              }
            },
            "health_check": {
              "enabled": true,
              "interval": "30s",
              "timeout": "5s"
            }
          }
        ]
      },
      "observability": {
        "metrics": {
          "prometheus": {
            "enabled": true,
            "port": 9090
          }
        },
        "logging": {
          "level": "info",
          "format": "json"
        },
        "tracing": {
          "enabled": true,
          "jaeger": {
            "endpoint": "http://jaeger:14268/api/traces"
          }
        }
      },
      "security": {
        "authentication": {
          "enabled": true,
          "providers": ["bearer_token"]
        },
        "authorization": {
          "enabled": true,
          "rbac": {
            "policies": [
              {
                "role": "team-member",
                "resources": ["mcp:*"],
                "actions": ["read", "execute"]
              },
              {
                "role": "team-manager",
                "resources": ["mcp:*"],
                "actions": ["read", "execute", "configure"]
              }
            ]
          }
        }
      },
      "rate_limiting": {
        "enabled": true,
        "rules": [
          {
            "matcher": {"path": "/mcp/*"},
            "rate": "100/min"
          }
        ]
      }
    }
