apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-ai-web
  namespace: virtual-ai-platform
  labels:
    app: virtual-ai-web
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: virtual-ai-web
  template:
    metadata:
      labels:
        app: virtual-ai-web
        environment: production
    spec:
      serviceAccountName: virtual-ai-web-sa
      containers:
      - name: web
        image: ghcr.io/bryansparks/elfautomations-web:main-latest
        ports:
        - containerPort: 8080
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: anon-key
        - name: SUPABASE_PERSONAL_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: personal-access-token
        - name: SUPABASE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: project-id
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-api-secrets
              key: anthropic-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-api-secrets
              key: openai-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: virtual-ai-web-service
  namespace: virtual-ai-platform
  labels:
    app: virtual-ai-web
    environment: production
spec:
  selector:
    app: virtual-ai-web
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: virtual-ai-web-hpa
  namespace: virtual-ai-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: virtual-ai-web
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: virtual-ai-ingress
  namespace: virtual-ai-platform
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - virtual-ai.company
    secretName: virtual-ai-prod-tls
  rules:
  - host: virtual-ai.company
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: virtual-ai-web-service
            port:
              number: 80
